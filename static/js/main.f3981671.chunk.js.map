{"version":3,"sources":["components/PortfolioHeader/index.js","components/PortfolioHeader/PortfolioHeader.js","content/LandingPage/Header.js","content/LandingPage/SuperpowerRating.js","content/LandingPage/Skill/SkillCard.js","content/LandingPage/Skill/SkillList.js","content/services/SkillService.js","content/LandingPage/Skill/Skills.js","content/LandingPage/index.js","content/LandingPage/LandingPage.js","content/SampleCharts/ReactCharts.js","content/SampleCharts/LineChart.js","content/RepoPage/RepoTable.js","content/RepoPage/RepoPage.js","content/SampleAnalyticsPage/SampleAnalyticsPage.js","content/SampleAnalyticsPage/index.js","content/LandingPage/Footer.js","App.js","serviceWorker.js","index.js"],"names":["TutorialHeader","react_default","a","createElement","UIShell","aria-label","element","Link","to","prefix","Header","props","className","href","title","defaultProps","styles","superpowersInner","width","concat","superpowersEmptyInner","position","superpowersOuter","overflow","superpower","padding","superpowerI","SuperpowerRating","rating","containerStyle","Math","floor","style","SkillCard","src","skill","imageUrl","alt","react_router_dom","subtitle","fontSize","description","LandingPage_SuperpowerRating","SkillList","skills","map","Skill_SkillCard","key","id","SkillService","Skills","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","setState","getSkills","marginLeft","Skill_SkillList","Component","LandingPage","LandingPage_Header","Skills_Skills","simpleBarOptions","axes","left","primary","bottom","scaleType","secondary","height","simpleBarData","labels","datasets","label","data","ReactCharts","bundle","options","lineOptions","lineData","LineCharts","RepoTable","_ref","rows","headers","getRowDescription","rowId","row","find","_ref2","DataTable","render","_ref3","getHeaderProps","getRowProps","getTableProps","TableContainer","Table","TableHead","TableRow","TableExpandHeader","header","TableHeader","TableBody","Fragment","TableExpandRow","cells","cell","TableCell","value","TableExpandedRow","colSpan","length","REPO_QUERY","gql","_templateObject","RepoPage","_useState","useState","_useState2","slicedToArray","totalItems","setTotalItems","_useState3","_useState4","firstRowIndex","setFirstRowIndex","_useState5","_useState6","currentPageSize","setCurrentPageSize","react_apollo_esm","query","loading","error","launchesPast","DataTableSkeleton","columnCount","rowCount","message","dataLength","objectSpread","launch_date_local","Date","toLocaleDateString","launch_site","site_name_long","getRowItems","RepoPage_RepoTable","slice","Pagination","backwardText","forwardText","pageSize","pageSizes","itemsPerPageText","onChange","page","selected","triggerHref","role","tabIndex","SampleAnalyticsPage","Tabs","assign","Tab","SampleCharts_ReactCharts","LineChart","content_RepoPage_RepoPage","Footer","aria-hidden","App","components_PortfolioHeader","react_router","exact","path","component","LandingPage_Footer","Boolean","window","location","hostname","match","client","ApolloClient","uri","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f3981671.chunk.js","sourcesContent":["import TutorialHeader from './PortfolioHeader';\nexport default TutorialHeader;\n","import React from 'react';\nimport {\n  Header,\n  HeaderName,\n  HeaderNavigation,\n  HeaderMenuItem,\n  SkipToContent,\n} from 'carbon-components-react/lib/components/UIShell';\nimport { Link } from 'react-router-dom';\n\nconst PortfolioHeader = () => (\n  <Header aria-label=\"Kevin D Humphries Portfolio Site\">\n    <SkipToContent />\n    <HeaderName element={Link} to=\"/\" prefix=\"\">\n      Overview\n    </HeaderName>\n    <HeaderNavigation aria-label=\"Analytics Sample\">\n      <HeaderMenuItem element={Link} to=\"/analytics\">\n        Analytics Sample\n      </HeaderMenuItem>\n    </HeaderNavigation>\n\n  </Header>\n);\n\nexport default PortfolioHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = (props) => (\n    <nav className=\"header navbar navbar-dark bg-dark\">\n        <div className=\"container\">\n            <div className=\"row m-auto\">\n                <div className=\"h3 ml-3 my-auto text-light\" href=\"/\">{props.title}</div>\n            </div>\n        </div>\n    </nav>\n);\n\nHeader.defaultProps = {\n    title: 'Title'\n};\n\nHeader.propTypes = {\n    title: PropTypes.string\n};\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst width = 130;\n\nconst styles = {\n    superpowersInner: {\n        width: `${width}px`\n    },\n    superpowersEmptyInner: {\n        position: 'absolute',\n        width: `${width}px`\n    },\n    superpowersOuter: {\n        overflow: 'hidden'\n    },\n    superpower: {\n        padding: '1px'\n    },\n    superpowerI: {\n        padding: '2.4px'\n    }\n};\n\nconst cropWidth = (rating) => {\n    return Math.floor(rating * width / 5.5);\n};\n\nconst SuperpowerRating = (props) => {\n\n    const containerStyle = { width: `${cropWidth(props.rating)}px` };\n\n    return (\n        <div>\n            <div style={styles.superpowersOuter}>\n                <div style={containerStyle}>\n                    <div style={styles.superpowersEmptyInner}>\n                        <i className=\"fa fa-superpowers fa-lg\" style={styles.superpower}></i>\n                        <i className=\"fa fa-superpowers fa-lg\" style={styles.superpower}></i>\n                        <i className=\"fa fa-superpowers fa-lg\" style={styles.superpower}></i>\n                        <i className=\"fa fa-superpowers fa-lg\" style={styles.superpower}></i>\n                        <i className=\"fa fa-superpowers fa-lg\" style={styles.superpower}></i>\n                    </div>\n                    <div style={styles.superpowersInner}>\n                        <i className=\"fa fa-circle fa-lg\" style={styles.superpowerI}></i>\n                        <i className=\"fa fa-circle fa-lg\" style={styles.superpowerI}></i>\n                        <i className=\"fa fa-circle fa-lg\" style={styles.superpowerI}></i>\n                        <i className=\"fa fa-circle fa-lg\" style={styles.superpowerI}></i>\n                        <i className=\"fa fa-circle fa-lg\" style={styles.superpowerI}></i>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nSuperpowerRating.defaultProps = {\n    rating: 0\n};\n\nSuperpowerRating.propTypes = {\n    rating: PropTypes.number\n};\n\nexport default SuperpowerRating;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SuperpowerRating from '../SuperpowerRating';\nimport { Link } from 'react-router-dom';\n//import { ReactCharts } from '../acoustic-react-charts/ReactCharts';\n\nconst SkillCard = (props) => (\n    <div className=\"skill-card\">\n        <div className=\"skill-card card\">\n            <img className=\"card-img-top\" src={props.skill.imageUrl} alt=\"\" />\n            <div className=\"card-body\">\n                <h4 className=\"card-title\">{props.skill.title}</h4>\n                <h6 className=\"card-subtitle mb-2 text-muted\"><Link to=\"/ReactCharts\">{props.skill.subtitle}</Link></h6>\n                <p className=\"text-justify\" style={{fontSize: '14px'}}>{props.skill.description}</p>\n            </div>\n            <div className=\"card-footer\">\n                <div className=\"clearfix\">\n                    <div className=\"float-left mt-1\">\n                        <SuperpowerRating rating={props.skill.rating} />\n                    </div>\n                    <div className=\"card-footer-badge float-right badge badge-primary badge-pill\">{props.skill.rating}</div>\n                </div>\n            </div>\n        </div>\n    </div>\n);\n\nSkillCard.defaultProps = {\n    skill: {}\n};\n\nSkillCard.propTypes = {\n    skill: PropTypes.object\n};\n\nexport default SkillCard;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SkillCard from './SkillCard';\n\nconst getSkills = (skills) => {\n    return (\n        <div className=\"card-deck\">\n            {\n                skills.map(skill => <SkillCard key={skill.id} skill={skill} />)\n            }\n        </div>\n    );\n};\n\nconst SkillList = (props) => (\n    <div>\n        {getSkills(props.skills)}\n    </div>\n);\n\nSkillList.defaultProps = {\n    skills: []\n};\n\nSkillList.propTypes = {\n    skills: PropTypes.array\n};\n\nexport default SkillList;","import skills from './skills.json';\n\nexport default class SkillService {\n    static getSkills() {\n        return skills ? skills : [];\n    }\n}","import React, { Component } from 'react';\nimport SkillList from './SkillList';\nimport SkillService from '../../services/SkillService';\n\nexport default class Skills extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            skills: []\n        };\n    }\n\n    componentDidMount() {\n        this.setState(() => ({ skills: SkillService.getSkills() }));\n    }\n\n    render() {\n        return (\n            <div className=\"container-fluid\" style={{marginLeft: '-15px'}}>\n                <div className=\"d-flex flex-row\">                    \n                    <div className=\"col-sm-12\">\n                        <SkillList skills={this.state.skills} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import LandingPage from './LandingPage';\nexport default LandingPage;\n","import React, { Component } from 'react';\nimport Header from './Header';\nimport Skills from './Skill/Skills';\n//import Footer from './Footer';\n\n//const Landing = () => (\n//    <div>\n//        <main className=\"my-5\">\n//            <Skills />\n//        </main>\n//    </div>\n//);\n\nexport default class LandingPage extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            title: 'Kevin D Humphries'\n        };\n    }\n\n    render() {\n        return (\n          <div>\n            <Header title={this.state.title} />\n            <main className=\"my-5\">\n              <Skills />\n            </main>\n          </div>\n        );\n    }\n}\n","import React from 'react';\n\nimport { SimpleBarChart } from '@carbon/charts-react';\n//import '@carbon/charts/styles.css';\nimport '@carbon/charts/styles/styles.scss';\n\nconst simpleBarOptions = {\n  title: \"Simple bar\",\n  axes: {\n    left: {\n      primary: true\n    },\n    bottom: {\n      scaleType: \"labels\",\n      secondary: true\n    }\n  },\n    height: '400px',\n};\n\nconst simpleBarData = {\n    labels: ['Quantity', 'Leads', 'Sold', 'Restocking', 'Misc'],\n  datasets: [\n    {\n      label: \"Dataset 1\",\n      data: [\n        65000,\n        29123,\n        35213,\n        51213,\n        16932\n      ]\n    }\n  ]\n        //{\n        //    label: 'Dataset 2',\n        //    data: [32432, 21312, 56456, 21312, 34234],\n        //},\n        //{\n        //    label: 'Dataset 3',\n        //    data: [12312, 23232, 34232, 12312, 34234],\n        //},\n\n};\n\nconst ReactCharts  = () => (\n    <div className=\"container-fluid\">\n        <div className=\"d-flex flex-row\">\n            <div className=\"col-sm-12\">\n                <SimpleBarChart\n                  data={simpleBarData}\n                  options={simpleBarOptions}\n                />\n            </div>\n        </div>\n    </div>\n\n);\n\nexport default ReactCharts;\n","import React from 'react';\n\nimport { LineChart } from '@carbon/charts-react';\n//import '@carbon/charts/styles.css';\nimport '@carbon/charts/styles/styles.scss';\n\nconst lineOptions = {\n  title: \"Line\",\n  axes: {\n    bottom: {\n      title: \"2019 Annual Sales Figures\",\n      scaleType: \"labels\",\n      secondary: true\n    },\n    left: {\n      primary: true\n    }\n  },\n  height: '500px'\n};\n\nconst lineData = {\n  labels: [\"Qty\", \"More\", \"Sold\", \"Restocking\", \"Misc\"],\n  datasets: [\n    {\n      label: \"Dataset 1\",\n      data: [\n        32100,\n        23500,\n        53100,\n        42300,\n        12300\n      ]\n    },\n    {\n      label: \"Dataset 2\",\n      data: [\n        34200,\n        53200,\n        42300,\n        21400,\n        0\n      ]\n    },\n    {\n      label: \"Dataset 3\",\n      data: [\n        41200,\n        23400,\n        34210,\n        1400,\n        42100\n      ]\n    },\n    {\n      label: \"Dataset 4\",\n      data: [\n        22000,\n        1200,\n        9000,\n        24000,\n        3000\n      ]\n    },\n    {\n      label: \"Dataset 5\",\n      data: [\n        2412,\n        30000,\n        10000,\n        5000,\n        31000\n      ]\n    },\n    {\n      label: \"Dataset 6\",\n      data: [\n        0,\n        20000,\n        40000,\n        60000,\n        80000\n      ]\n    }\n  ]\n};\n\nconst LineCharts  = () => (\n    <div className=\"container-fluid\">\n        <div className=\"d-flex flex-row\">\n            <div className=\"col-sm-12\">\n                <LineChart\n                    data={lineData}\n                    options={lineOptions}\n                />\n            </div>\n        </div>\n    </div>\n\n);\n\nexport default LineCharts;\n","import React from 'react';\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableExpandHeader,\n  TableHeader,\n  TableBody,\n  TableExpandRow,\n  TableCell,\n  TableExpandedRow,\n} from 'carbon-components-react';\n\nconst RepoTable = ({ rows, headers }) => {\n  const getRowDescription = rowId => {\n    const row = rows.find(({ id }) => id === rowId);\n    return row ? row.description : '';\n  };\n\n  return (\n    <DataTable\n      rows={rows}\n      headers={headers}\n      render={({\n        rows,\n        headers,\n        getHeaderProps,\n        getRowProps,\n        getTableProps,\n      }) => (\n        <TableContainer\n          title=\"Rocket Launches\"\n          description=\"A list of recent SpaceX launches utilizing a public api\">\n          <Table {...getTableProps()}>\n            <TableHead>\n              <TableRow>\n                <TableExpandHeader />\n                {headers.map(header => (\n                  <TableHeader {...getHeaderProps({ header })}>\n                    {header.header}\n                  </TableHeader>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map(row => (\n                <React.Fragment key={row.id}>\n                  <TableExpandRow {...getRowProps({ row })}>\n                    {row.cells.map(cell => (\n                      <TableCell key={cell.id}>{cell.value}</TableCell>\n                    ))}\n                  </TableExpandRow>\n                  <TableExpandedRow colSpan={headers.length + 1}>\n                    <p>{getRowDescription(row.id)}</p>\n                  </TableExpandedRow>\n                </React.Fragment>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    />\n  );\n};\n\nexport default RepoTable;\n","import React, { useState } from 'react';\nimport RepoTable from './RepoTable';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\nimport { DataTableSkeleton, Pagination } from 'carbon-components-react';\n\nconst REPO_QUERY = gql`\n  query REPO_QUERY {\n     launchesPast(limit: 50) {\n      mission_name\n      launch_date_local\n      launch_site {\n        site_name_long\n      }\n      rocket {\n        rocket_name\n        rocket_type\n      }\n      id\n    }\n  }\n`;\n\nconst headers = [\n  {\n    key: 'mission_name',\n    header: 'Name',\n  },\n  {\n    key: 'launch_date_local',\n    header: 'Launch date',\n  },\n  //{\n  //  key: 'launch_site.site_name_long',\n  //  header: 'Launch site',\n  //},\n  //{\n  //  key: 'rocket.rocket_name',\n  //  header: 'Rocket',\n  //},\n];\n\n//const LinkList = ({ name, type }) => (\n//  <ul style={{ display: 'flex' }}>\n//    <li>\n//      {name}\n//    </li>\n//    {type && (\n//      <li>\n//        <span>&nbsp;|&nbsp;</span>\n//        {type}\n//      </li>\n//    )}\n//\n//  </ul>\n//);\n\nconst getRowItems = rows =>\n  rows.map(row => ({\n    ...row,\n    key: row.id,\n    launch_date_local: new Date(row.launch_date_local).toLocaleDateString(),\n    description: row.launch_site.site_name_long,\n  }));\n\nconst RepoPage = () => {\n  const [totalItems, setTotalItems] = useState(0);\n  const [firstRowIndex, setFirstRowIndex] = useState(0);\n  const [currentPageSize, setCurrentPageSize] = useState(5);\n\n  return (\n    <div className=\"bx--grid bx--grid--full-width bx--grid--no-gutter repo-page\">\n      <div className=\"bx--row repo-page__r1\">\n        <div className=\"bx--col-lg-16\">\n          <Query query={REPO_QUERY}>\n            {({ loading, error, data: { launchesPast } }) => {\n              // Wait for the request to complete\n              if (loading)\n                return (\n                  <DataTableSkeleton\n                    columnCount={headers.length + 1}\n                    rowCount={5}\n                    headers={headers}\n                  />\n                );\n\n              // Something went wrong with the data fetching\n              if (error) return `Error! ${error.message}`;\n\n              // If we're here, we've got our data!\n              const dataLength = launchesPast.length;\n              setTotalItems(dataLength);\n              const rows = getRowItems(launchesPast);\n\n              return (\n                <>\n                  <RepoTable\n                    headers={headers}\n                    rows={rows.slice(\n                      firstRowIndex,\n                      firstRowIndex + currentPageSize\n                    )}\n                  />\n                  <Pagination\n                    totalItems={totalItems}\n                    backwardText=\"Previous page\"\n                    forwardText=\"Next page\"\n                    pageSize={currentPageSize}\n                    pageSizes={[5, 10, 15, 25]}\n                    itemsPerPageText=\"Items per page\"\n                    onChange={({ page, pageSize }) => {\n                      if (pageSize !== currentPageSize) {\n                        setCurrentPageSize(pageSize);\n                      }\n                      setFirstRowIndex(pageSize * (page - 1));\n                    }}\n                  />\n                </>\n              );\n            }}\n          </Query>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RepoPage;\n","import React from 'react';\n//import { ChartLine32 } from '@carbon/icons-react';\nimport {\n  Tabs,\n  Tab,\n} from 'carbon-components-react';\nimport ReactCharts from \"../SampleCharts/ReactCharts\";\nimport LineCharts from \"../SampleCharts/LineChart\";\nimport RepoPage from \"../RepoPage/RepoPage\"\n\nconst props = {\n  tabs: {\n    selected: 0,\n    triggerHref: '#',\n    role: 'navigation',\n  },\n  tab: {\n    href: '#',\n    role: 'presentation',\n    tabIndex: 0,\n  },\n};\n\nconst SampleAnalyticsPage = () => {\n  return (\n    <div className=\"bx--grid bx--grid--full-width landing-page\">\n      <div className=\"bx--row landing-page__banner\">\n        <div className=\"bx--col-lg-16\">\n          <h1 className=\"landing-page__heading\">\n            Sample Reports\n          </h1>\n        </div>\n      </div>\n      <div className=\"bx--row landing-page__r2\">\n        <div className=\"bx--col bx--no-gutter\">\n          <Tabs {...props.tabs} aria-label=\"Tab navigation\">\n            <Tab {...props.tab} label=\"Simple Bar Chart\">\n              <div className=\"bx--grid bx--grid--no-gutter bx--grid--full-width\">\n                <div className=\"bx--row landing-page__tab-content\">\n                  <div className=\"bx--col-lg-16\">\n                    <ReactCharts />\n                  </div>\n                </div>\n              </div>\n            </Tab>\n            <Tab {...props.tab} label=\"Line Chart\">\n              <div className=\"bx--grid bx--grid--no-gutter bx--grid--full-width\">\n                <div className=\"bx--row landing-page__tab-content\">\n                  <div className=\"bx--col-lg-16\">\n                    <LineCharts />\n                  </div>\n                </div>\n              </div>\n            </Tab>\n            <Tab {...props.tab} label=\"Table\">\n              <div className=\"bx--grid bx--grid--no-gutter bx--grid--full-width\">\n                <div className=\"bx--row landing-page__tab-content\">\n                  <div className=\"bx--col-lg-16\">\n                    <RepoPage />\n                  </div>\n                </div>\n              </div>\n            </Tab>\n          </Tabs>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SampleAnalyticsPage;\n","import SampleAnalyticsPage from './SampleAnalyticsPage';\nexport default SampleAnalyticsPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Footer = () => (\n    <footer className=\"navbar py-3 bg-dark sticky-footer\">\n        <a href=\"https://www.linkedin.com/in/kevin-d-humphries\">\n            <i className=\"fa fa-linkedin fa-lg\" aria-hidden=\"true\"></i>\n        </a>\n        <a href=\"mailTo:thekevindhumphries@gmail.com\">\n            <i className=\"fa fa-envelope-o\" aria-hidden=\"true\"></i>\n        </a>\n    </footer>\n);\n\nFooter.defaultProps = {\n    title: 'Title'\n};\n\nFooter.propTypes = {\n    title: PropTypes.string\n};\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport './app.scss';\nimport { Content } from 'carbon-components-react/lib/components/UIShell';\nimport TutorialHeader from './components/PortfolioHeader';\nimport { Route, Switch } from 'react-router-dom';\nimport LandingPage from './content/LandingPage';\nimport SampleAnalyticsPage from './content/SampleAnalyticsPage';\nimport Footer from './content/LandingPage/Footer';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <TutorialHeader />\n        <Content>\n          <Switch>\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route path=\"/analytics\" component={SampleAnalyticsPage} />\n          </Switch>\n        </Content>\n      <Footer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'core-js/modules/es7.array.includes';\nimport 'core-js/modules/es6.array.fill';\nimport 'core-js/modules/es6.string.includes';\nimport 'core-js/modules/es6.string.trim';\nimport 'core-js/modules/es7.object.values';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\nconst client = new ApolloClient({\n  uri: 'https://api.spacex.land/graphql/',\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Router>\n      <App />\n    </Router>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}